{"version":3,"sources":["components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","display","overflowX","tabs","position","background","justifyContent","alignItems","flexDirection","height","paddingRight","color","content","zIndex","minHeight","backgroundColor","marginLeft","width","borderRadius","tabsFooter","tab","textDecoration","fontSize","margin","tabIcon","Nav","pages","classes","className","Tabs","orientation","variant","map","page","index","key","icon","label","to","link","activeStyle","path","style","top","padding","paddingLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6RAMMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,UAAW,UAEbC,KAAM,CACJF,QAAS,OACTG,SAAU,QAEVC,WACE,qEACFC,eAAgB,gBAChBC,WAAY,SACZC,cAAe,SACfC,OAAQ,OACRC,aAAc,OACdC,MAAO,SAETC,QAAS,CACPC,OAAQ,EACRC,UAAW,QACXC,gBAAiB,QACjBC,WAAY,OACZC,MAAO,OAEPC,aAAc,iBAEhBC,WAAY,CACVlB,QAAS,OACTO,cAAe,SACfD,WAAY,SACZD,eAAgB,UAElBc,IAAK,CACHX,OAAQ,OACRQ,MAAO,OACPhB,QAAS,OACTO,cAAe,SACfD,WAAY,SACZD,eAAgB,SAChBe,eAAgB,OAChBV,MAAO,cACPW,SAAU,MACVC,OAAQ,qBAEVC,QAAS,CACPF,SAAU,MACVX,MAAO,aAII,SAASc,EAAT,GAAyB,IAAVC,EAAS,EAATA,MACtBC,EAAU7B,IAEhB,OACE,yBAAK8B,UAAWD,EAAQ3B,MACtB,yBAAK4B,UAAWD,EAAQxB,MACtB,6BACE,kBAAC,IAAD,OAGF,kBAAC0B,EAAA,EAAD,CAAMC,YAAY,WAAWC,QAAQ,cAClCL,EAAMM,KAAI,SAACC,EAAMC,GAChB,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLE,KAAMH,EAAKG,KACXC,MAAOJ,EAAKI,MACZC,GAAIL,EAAKM,KACTX,UAAWD,EAAQP,IACnBoB,YAAa,CACXtB,aAAc,MACdP,MAAO,QACPI,gBAAiB,6BAGnB,yBAAKa,UAAWD,EAAQH,SAAUS,EAAKG,MACvC,6BAAMH,EAAKI,YAMnB,yBAAKT,UAAWD,EAAQR,YACtB,kBAAC,IAAD,MADF,IACmB,kBAAC,IAAD,QAIrB,yBAAKS,UAAWD,EAAQf,SACrBc,EAAMM,KAAI,SAACC,GACV,OAAO,kBAAC,IAAD,CAAOQ,KAAMR,EAAKM,MAAON,EAAKrB,c,qBC1FzCc,EAAQ,CACZ,CACEd,QACE,yBACE8B,MAAO,CACL3B,gBAAiB,mBACjBE,MAAO,OACPH,UAAW,QACXI,aAAc,kBAGhB,yBACEwB,MAAO,CACL3B,gBAAiB,QACjBE,MAAO,OACPb,SAAU,QACVuC,IAAK,EACLC,QAAS,OACT1B,aAAc,eAPlB,UAYA,yBAAKwB,MAAO,CAAEG,YAAa,SACzB,+PAMA,gPAMA,uPAMA,+PAMA,gPAMA,uPAMA,+PAMA,gPAMA,uPAMA,+PAMA,gPAMA,yPASNR,MAAO,WACPD,KAAM,kBAAC,IAAD,MACNG,KAAM,YAER,CACE3B,QAAS,oCACTyB,MAAO,WACPD,KAAM,kBAAC,IAAD,MACNG,KAAM,aAER,CACE3B,QAAS,oCACTyB,MAAO,WACPD,KAAM,kBAAC,IAAD,MACNG,KAAM,cAYKO,MARf,WACE,OACE,6BACE,kBAACrB,EAAD,CAAKC,MAAOA,MClHEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3eb84195.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: \"flex\",\n    overflowX: \"hidden\",\n  },\n  tabs: {\n    display: \"flex\",\n    position: \"fixed\",\n\n    background:\n      \"linear-gradient(180deg, rgba(17,0,36,1) 0%, rgba(95,5,151,1) 100%)\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    paddingRight: \"28px\",\n    color: \"white\",\n  },\n  content: {\n    zIndex: 1,\n    minHeight: \"100vh\",\n    backgroundColor: \"white\",\n    marginLeft: \"70px\",\n    width: \"100%\",\n\n    borderRadius: \"32px 0 0 32px\",\n  },\n  tabsFooter: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  tab: {\n    height: \"48px\",\n    width: \"48px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textDecoration: \"none\",\n    color: \"transparent\",\n    fontSize: \"8px\",\n    margin: \"2px 12px 2px 12px\",\n  },\n  tabIcon: {\n    fontSize: \"1px\",\n    color: \"white\",\n  },\n}));\n\nexport default function Nav({ pages }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.tabs}>\n        <div>\n          <FavoriteIcon />\n        </div>\n\n        <Tabs orientation=\"vertical\" variant=\"scrollable\">\n          {pages.map((page, index) => {\n            return (\n              <NavLink\n                key={index}\n                icon={page.icon}\n                label={page.label}\n                to={page.link}\n                className={classes.tab}\n                activeStyle={{\n                  borderRadius: \"8px\",\n                  color: \"white\",\n                  backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                }}\n              >\n                <div className={classes.tabIcon}>{page.icon}</div>\n                <div>{page.label}</div>\n              </NavLink>\n            );\n          })}\n        </Tabs>\n\n        <div className={classes.tabsFooter}>\n          <FavoriteIcon /> <FavoriteIcon />\n        </div>\n      </div>\n\n      <div className={classes.content}>\n        {pages.map((page) => {\n          return <Route path={page.link}>{page.content}</Route>;\n        })}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst pages = [\n  {\n    content: (\n      <div\n        style={{\n          backgroundColor: \"rgb(245,245,245)\",\n          width: \"100%\",\n          minHeight: \"100vh\",\n          borderRadius: \"32px 0 0 32px\",\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"white\",\n            width: \"100%\",\n            position: \"fixed\",\n            top: 0,\n            padding: \"32px\",\n            borderRadius: \"32px 0 0 0\",\n          }}\n        >\n          Header\n        </div>\n        <div style={{ paddingLeft: \"32px\" }}>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n            consequuntur doloribus eius error esse eveniet ipsam ipsum iusto\n            labore maiores natus neque nostrum odio quam quisquam, reprehenderit\n            sed vitae, voluptatem.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid\n            eius esse facere id itaque quia sed vitae. Cupiditate, dignissimos\n            fuga harum id natus numquam quam quisquam repellendus sapiente\n            tempora unde!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. At cum\n            dicta dolore eos eveniet facere, fuga hic incidunt ipsam magnam\n            molestias natus nesciunt nihil, nisi quibusdam, sint temporibus\n            veritatis voluptatibus!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n            consequuntur doloribus eius error esse eveniet ipsam ipsum iusto\n            labore maiores natus neque nostrum odio quam quisquam, reprehenderit\n            sed vitae, voluptatem.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid\n            eius esse facere id itaque quia sed vitae. Cupiditate, dignissimos\n            fuga harum id natus numquam quam quisquam repellendus sapiente\n            tempora unde!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. At cum\n            dicta dolore eos eveniet facere, fuga hic incidunt ipsam magnam\n            molestias natus nesciunt nihil, nisi quibusdam, sint temporibus\n            veritatis voluptatibus!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n            consequuntur doloribus eius error esse eveniet ipsam ipsum iusto\n            labore maiores natus neque nostrum odio quam quisquam, reprehenderit\n            sed vitae, voluptatem.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid\n            eius esse facere id itaque quia sed vitae. Cupiditate, dignissimos\n            fuga harum id natus numquam quam quisquam repellendus sapiente\n            tempora unde!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. At cum\n            dicta dolore eos eveniet facere, fuga hic incidunt ipsam magnam\n            molestias natus nesciunt nihil, nisi quibusdam, sint temporibus\n            veritatis voluptatibus!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Assumenda\n            consequuntur doloribus eius error esse eveniet ipsam ipsum iusto\n            labore maiores natus neque nostrum odio quam quisquam, reprehenderit\n            sed vitae, voluptatem.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid\n            eius esse facere id itaque quia sed vitae. Cupiditate, dignissimos\n            fuga harum id natus numquam quam quisquam repellendus sapiente\n            tempora unde!\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. At cum\n            dicta dolore eos eveniet facere, fuga hic incidunt ipsam magnam\n            molestias natus nesciunt nihil, nisi quibusdam, sint temporibus\n            veritatis voluptatibus!\n          </p>\n        </div>\n      </div>\n    ),\n    label: \"one page\",\n    icon: <PhoneIcon />,\n    link: \"/onepage\",\n  },\n  {\n    content: <div>two</div>,\n    label: \"two page\",\n    icon: <FavoriteIcon />,\n    link: \"/treepage\",\n  },\n  {\n    content: <div>two</div>,\n    label: \"two page\",\n    icon: <FavoriteIcon />,\n    link: \"/fourpage\",\n  },\n];\n\nfunction App() {\n  return (\n    <div>\n      <Nav pages={pages} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}